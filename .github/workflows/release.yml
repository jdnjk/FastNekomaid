name: Release

on:
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  build-plugin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Check out git repository
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 8

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/libs/NekoMaid-1.0-SNAPSHOT.jar
          asset_name: NekoMaid.jar
          tag: ${{ github.ref }}

  build-website:
    runs-on: ubuntu-latest
    steps:
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Check out git repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y mesa-utils libxi-dev libglu1-mesa-dev libglew-dev pkg-config xvfb

      - name: Install npm dependencies
        run: npm install --legacy-peer-deps

      - name: Generate assets
        run: xvfb-run --auto-servernum npm run gen
        
      - name: Copy icons
        run: mkdir public && npm run copyIcons

      - name: Build app
        run: npm run build

      - name: Deploy
        uses: crazy-max/ghaction-github-pages@v3
        with:
          build_dir: dist
          fqdn: neko.jdnjk.eu.org
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
